name: Deploy SSIS Project

on:
  workflow_dispatch:

jobs:
  deploy-ssis-project:
    runs-on: [self-hosted, windows]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: repo

      - name: List Directory Contents
        shell: powershell
        run: |
          Write-Host "Listing current directory contents:"
          Get-ChildItem -Recurse -Path repo

      - name: Deploy SSIS Project (.ispac)
        env:
          DB_SERVER: ${{ secrets.DB_SERVER }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        shell: powershell
        run: |
          Write-Host "Starting SSIS project deployment..."

          $repoPath = Resolve-Path "repo"
          $ispacPath = Join-Path $repoPath "ProjectPackages\ProjectPackages\bin\Development\ProjectPackages.ispac"
          $wizardPath = "C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\ISDeploymentWizard.exe"
          $stdoutLog = ".\ssisdeploy_output.log"
          $stderrLog = ".\ssisdeploy_error.log"
          $connectLog = ".\ssisconnect_test.log"

          Write-Host "Validating ISPAC file path: $ispacPath"
          if (-not (Test-Path $ispacPath)) {
              Write-Error "ISPAC file not found at: $ispacPath"
              Get-ChildItem -Recurse -Path $repoPath | Out-String | Write-Host
              exit 1
          }

          Write-Host "Validating ISDeploymentWizard.exe path: $wizardPath"
          if (-not (Test-Path $wizardPath)) {
              Write-Error "ISDeploymentWizard.exe not found at: $wizardPath"
              exit 1
          }

          try {
              $sqlcmd = "sqlcmd -S `"$env:DB_SERVER`" -E -Q `"SELECT @@VERSION`" -o $connectLog"
              Invoke-Expression $sqlcmd
              if ($LASTEXITCODE -eq 0) {
                  Write-Host "Windows Authentication connectivity test succeeded."
                  Get-Content $connectLog | Write-Host
              } else {
                  Write-Warning "Windows Authentication connectivity test failed."
                  Get-Content $connectLog | Write-Warning
                  exit 1
              }
          } catch {
              Write-Error "Error testing Windows Authentication: $_"
              exit 1
          }

          function Deploy-SSISProject {
              param ([string[]]$Arguments)
              Write-Host "Running ISDeploymentWizard with arguments:"
              $Arguments | ForEach-Object { Write-Host "`t$_" }
              $processInfo = New-Object System.Diagnostics.ProcessStartInfo
              $processInfo.FileName = $wizardPath
              $processInfo.Arguments = ($Arguments -join " ")
              $processInfo.RedirectStandardOutput = $true
              $processInfo.RedirectStandardError = $true
              $processInfo.UseShellExecute = $false
              $processInfo.CreateNoWindow = $true
              $process = [System.Diagnostics.Process]::Start($processInfo)
              $process.WaitForExit()
              $stdout = $process.StandardOutput.ReadToEnd()
              $stderr = $process.StandardError.ReadToEnd()
              $stdout | Out-File -FilePath $stdoutLog
              $stderr | Out-File -FilePath $stderrLog
              $exitCode = $process.ExitCode
              Write-Host "===== STDOUT ====="; if (Test-Path $
