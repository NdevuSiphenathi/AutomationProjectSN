name: SSIS and Agent Job Deployment

on:
  workflow_call:

jobs:
  deploy-ssis-project:
    runs-on: [self-hosted, windows]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy SSIS Project (.ispac)
        shell: powershell
        env:
          DB_SERVER: ${{ secrets.DB_SERVER }}
        run: |
          $ispacPath = "ProjectPackages\ProjectPackages\bin\Development\ProjectPackages.ispac"
          $wizardPath = "C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\ISDeploymentWizard.exe"

          if (-not (Test-Path $ispacPath)) {
            Write-Error "ISPAC file not found: $ispacPath"
            exit 1
          }

          & "$wizardPath" `
            /S+ `
            /SP:"$ispacPath" `
            /DS:"$env:DB_SERVER" `
            /DP:"/SSISDB/TimesheetDeployedPackages/ProjectPackages"

  deploy-sql-agent-jobs:
    needs: deploy-ssis-project
    runs-on: [self-hosted, windows]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy SQL Server Agent Jobs
        shell: powershell
        env:
          DB_SERVER: ${{ secrets.DB_SERVER }}
        run: |
          $template = @"
USE [msdb];
IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'@jobName')
BEGIN
    EXEC msdb.dbo.sp_delete_job @job_name = N'@jobName';
END
DECLARE @jobId UNIQUEIDENTIFIER;
EXEC msdb.dbo.sp_add_job 
    @job_name = N'@jobName',
    @enabled = 1,
    @notify_level_eventlog = 2,
    @description = N'SSIS job to run @jobName every 60 seconds',
    @category_name = N'[Uncategorized (Local)]',
    @owner_login_name = N'sa',
    @job_id = @jobId OUTPUT;

EXEC msdb.dbo.sp_add_jobstep 
    @job_name = N'@jobName',
    @step_name = N'Run SSIS Package',
    @subsystem = N'SSIS',
    @command = N'/ISSERVER "\SSISDB\TimesheetDeployedPackages\ProjectPackages\@jobName" /SERVER "$env:DB_SERVER" /ENVREFERENCE @envReferenceId',
    @on_success_action = 1,
    @on_fail_action = 2,
    @database_name = N'master',
    @output_file_name = N'C:\SSISLogs\@jobName.log';

EXEC msdb.dbo.sp_add_jobschedule 
    @job_name = N'@jobName',
    @name = N'RunEveryMinute',
    @enabled = 1,
    @freq_type = 4,
    @freq_interval = 1,
    @freq_subday_type = 2,
    @freq_subday_interval = 60,
    @active_start_time = 000000;

EXEC msdb.dbo.sp_add_jobserver 
    @job_name = N'@jobName',
    @server_name = N'(LOCAL)';
"@

          # Get all packages from the project
          $pkgQuery = "SELECT name FROM SSISDB.catalog.packages WHERE project_id IN (SELECT project_id FROM SSISDB.catalog.projects WHERE name = 'ProjectPackages')"
          $packages = sqlcmd -S $env:DB_SERVER -E -Q $pkgQuery -h -1 -W

          # Get environment reference for the project
          $refQuery = "SELECT reference_id FROM SSISDB.catalog.environment_references WHERE project_name = 'ProjectPackages' AND folder_name = 'TimesheetDeployedPackages'"
          $envRefId = sqlcmd -S $env:DB_SERVER -E -Q $refQuery -h -1 -W | Select-Object -First 1

          if (-not $envRefId) {
            Write-Error "No environment reference found. Please create one in SSISDB."
            exit 1
          }

          foreach ($pkg in $packages.Trim().Split("`n")) {
            $pkgName = $pkg.Trim()
            if (-not $pkgName) { continue }

            Write-Host "Deploying SQL Agent job for: $pkgName"

            $sqlScript = $template -replace '@jobName', $pkgName -replace '@envReferenceId', $envRefId
            $scriptPath = ".\temp_$pkgName.sql"
            $sqlScript | Out-File -FilePath $scriptPath -Encoding UTF8

            $cmd = "sqlcmd -S `"$env:DB_SERVER`" -E -i `"$scriptPath`""
            Invoke-Expression $cmd

            if ($LASTEXITCODE -ne 0) {
              Write-Error "Failed to deploy job for $pkgName"
              exit 1
            }
          }

          Write-Host "âœ… All SQL Agent jobs deployed successfully."
